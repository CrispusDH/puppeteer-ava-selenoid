{
  "name": "puppeteer-ava-selenoid",
  "description": "Example how to run puppeteer using AVA and Selenoid",
  "devDependencies": {
    "typescript": "3.6.3",
    "tslint": "5.20.0",
    "tslint-xo": "0.16.0",
    "ava": "2.4.0",
    "@types/node": "12.7.11",
    "puppeteer": "1.20.0",
    "@types/puppeteer": "1.20.1",
    "axios": "0.21.1"
  },
  "scripts": {
    "tsc": "tsc",
    "ava": "ava",
    "clean": "rm -rf dist",
    "pretest": "npm run clean && npm run lint && npm run tsc",
    "test": "npm run ava dist/puppeteer-ava.js",
    "posttest": "npm run clean",
    "lint": "tslint --project tsconfig.json 'src/**/*.ts' 'test/**/*.ts'",
    "cm:install": "curl -s https://aerokube.com/cm/bash | bash",
    "selenoid:download": "./cm selenoid download",
    "selenoid:configure": "./cm selenoid configure --browsers chrome:77.0",
    "selenoid:start": "./cm selenoid start",
    "selenoid:stop": "./cm selenoid stop",
    "selenoid:cleanup": "./cm selenoid cleanup",
    "selenoid:rm": "docker rm -f $(docker ps -aq)",
    "prestest": "npm run selenoid:download && npm run selenoid:configure && npm run selenoid:start && npm run pretest",
    "stest": "npm run ava dist/puppeteer-selenoid.js && npm run aftertest || npm run aftertest",
    "aftertest": "npm run selenoid:cleanup && npm run selenoid:stop && npm run selenoid:rm && npm run clean"
  },
  "ava": {
    "files": [
      "dist/**/*.js"
    ],
    "failWithoutAssertions": false,
    "verbose": true
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/CrispusDH/puppeteer-ava-selenoid.git"
  },
  "author": "Oleksii Ihnatiuk",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/CrispusDH/puppeteer-ava-selenoid/issues"
  },
  "homepage": "https://github.com/CrispusDH/puppeteer-ava-selenoid#readme"
}
